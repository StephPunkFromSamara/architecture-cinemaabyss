{{- if .Values.proxyService.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: proxy-service
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.proxyService.replicas }}
  selector:
    matchLabels:
      app: proxy-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: proxy-service
    spec:
      restartPolicy: Always
      imagePullSecrets:
        - name: dockerconfigjson
      containers:
        - name: proxy-service
          image: "{{ .Values.proxyService.image.repository }}:{{ .Values.proxyService.image.tag }}"
          imagePullPolicy: "{{ .Values.proxyService.image.pullPolicy }}"
          ports:
            - containerPort: {{ .Values.proxyService.service.targetPort }}
          env:
            - name: PORT
              value: "8081"
            - name: DB_CONNECTION_STRING
              value: "postgres://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable"
          envFrom:
            - configMapRef:
                name: cinemaabyss-config
            - secretRef:
                name: cinemaabyss-secrets
          resources: {{- toYaml .Values.proxyService.resources | nindent 12 }}
readinessProbe:
  httpGet:
    path: /health
    port: {{ .Values.proxyService.service.targetPort }}
  initialDelaySeconds: 5
  periodSeconds: 10
livenessProbe:
  httpGet:
    path: /health
    port: {{ .Values.proxyService.service.targetPort }}
  initialDelaySeconds: 15
  periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: proxy-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: proxy-service
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    app: proxy-service
  ports:
    - port: {{ .Values.proxyService.service.targetPort }}
      targetPort: {{ .Values.proxyService.service.targetPort }}
  type: ClusterIP
  {{- end }}